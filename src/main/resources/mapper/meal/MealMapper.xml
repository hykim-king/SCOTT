<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.scott.ngg.MealMapper">
  
  <!-- doRetreive 정렬조건 -->
  <sql id="orderCondition">
    <choose>
        <when test="orderDiv != '' and orderDir != ''">
            ORDER BY ${orderDiv} ${orderDir}
        </when>
        <otherwise>
            ORDER BY meal_reg_dt DESC
        </otherwise>
    </choose>
  </sql>
  
  <!-- doRetreive 검색 조건 -->
  <!-- SearchDiv: user_id(10), meal_content(20), meal_reg_dt(30), meal_mod_dt(40)-->
  <sql id="searchCondition">
      <where>
          <choose>
              <when test="searchDiv == '10' and searchWord != ''">
                  user_id LIKE '%' || #{searchWord} || '%'
              </when>
              
              <when test="searchDiv == '20' and searchWord != ''">
                  meal_content LIKE '%' || #{searchWord} || '%'
              </when>
              
              <!-- 기간 검색 -->
              <when test="searchDiv == '30' and startDate != '' and endDate != ''">
                  meal_reg_dt BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
              </when>
              
              <when test="searchDiv == '40' and startDate != '' and endDate != ''">
                  meal_mod_dt BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
              </when>
          </choose>
      </where>
  </sql> 
  
  <!-- doRetrieve: 조회+검색,페이징 -->
  <select id="doRetrieve" parameterType="SearchVO" resultType="MealVO">
		SELECT B.*, A.* 
		FROM (
		    SELECT COUNT(*) "totalNum" 
		    FROM meal_t
        <include refid="searchCondition"/>
		) A CROSS JOIN (
			SELECT mm.rnum "num", 
			       mm.meal_sq "mealSq", 
			       mm.user_id "userId", 
			       mm.meal_content "mealContent", 
			       TO_CHAR(mm.meal_reg_dt, 'YYYY/MM/DD') "mealRegDt", 
			       TO_CHAR(mm.meal_mod_dt, 'YYYY/MM/DD') "mealModDt" 
			FROM (
			    SELECT ROWNUM rnum,
			           m.* 
			    FROM (
			        SELECT meal_sq, 
			               user_id, 
			               meal_content, 
			               meal_reg_dt, 
			               meal_mod_dt 
			        FROM meal_t
			        <include refid="searchCondition"/>
			        <include refid="orderCondition"/>
			    ) m
			) mm
			WHERE rnum BETWEEN (#{pageSize}*(#{pageNum}-1))+1 AND (#{pageSize}*(#{pageNum}-1))+#{pageSize}
		) B  
  </select>

  <!-- doSelectOne: 단건 조회 -->
  <select id="doSelectOne" parameterType="MealVO" resultType="MealVO">
		SELECT meal_sq "mealSq", 
		       user_id "userId", 
		       meal_content "mealContent", 
           TO_CHAR(meal_reg_dt, 'YYYY/MM/DD') "mealRegDt", 
           TO_CHAR(meal_mod_dt, 'YYYY/MM/DD') "mealModDt"  
		FROM meal_t
		WHERE meal_sq = #{mealSq}
  </select>

  <!-- doUpdate: 수정 -->
  <update id="doUpdate" parameterType="MealVO">
		UPDATE meal_t
		SET meal_content = #{mealContent}, 
		    meal_mod_dt = SYSDATE 
		WHERE meal_sq = #{mealSq}
  </update>

  <!-- doDelete: 삭제 -->
  <delete id="doDelete" parameterType="MealVO">
		DELETE FROM meal_t
		WHERE meal_sq = #{mealSq}
  </delete>

  <!-- doInsert: 삽입 -->
  <insert id="doInsert" parameterType="MealVO">
		INSERT INTO meal_t (
		    user_id, 
		    meal_content, 
		    meal_reg_dt, 
		    meal_mod_dt 
		) VALUES (
		    #{userId}, 
		    #{mealContent}, 
		    #{mealRegDt}, 
		    #{mealModDt} 
		)
  </insert>


  <!--========= for JUnit Test =========-->
  <!-- getAll: 전체 조회 -->
  <select id="getAll" resultType="MealVO">
    SELECT *
    FROM meal_t
  </select>

  <!-- getAll: 전체 개수 -->
  <select id="getCount" resultType="int">
    SELECT count(*) "cnt"
    FROM meal_t
  </select>

  <!-- getAll: 전체 삭제 -->
  <delete id="deleteAll">
    DELETE FROM meal_t
  </delete>

  <!-- getLastData: 마지막 입력된 값 가져오기 -->
  <select id="getLastData" resultType="MealVO">
	  SELECT meal_sq "mealSq", 
		       user_id "userId", 
		       meal_content "mealContent", 
           TO_CHAR(meal_reg_dt, 'YYYY/MM/DD') "mealRegDt", 
           TO_CHAR(meal_mod_dt, 'YYYY/MM/DD') "mealModDt"  
		FROM meal_t
		WHERE meal_reg_dt = (
		    SELECT LAST_VALUE(meal_reg_dt) OVER()
		    FROM meal_t
		)
  </select>


</mapper>