<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.scott.ngg.MealMapper">
  
  <!-- doRetreive 정렬조건 -->
  <sql id="orderCondition">
    <choose>
        <when test="orderDiv != '' and orderDir != ''">
            ORDER BY ${orderDiv} ${orderDir}
        </when>
        <otherwise>
            ORDER BY meal_date DESC
        </otherwise>
    </choose>
  </sql>
  
  <!-- doRetreive 검색 조건 -->
  <!-- SearchDiv: user_id(10), strict user_id(99)-->
  <!-- SearchDateDiv - meal_date(10) --> 
  <sql id="searchCondition">
      <where>
          <choose>
              <when test="searchDiv == '10' and searchWord != ''">
                  user_id LIKE '%' || #{searchWord} || '%'
              </when>

              <when test="searchDiv == '99' and searchWord != ''">
                  user_id = #{searchWord}
              </when>
          </choose>
              
          <!-- 기간 검색 -->
          <choose>
              <when test="searchDateDiv == '10'">
                  <if test="startDate != ''">
                    AND meal_date <![CDATA[>= TO_DATE(#{startDate})]]>
                  </if>
                  <if test="endDate != ''">
                    AND meal_date <![CDATA[<= TO_DATE(#{endDate})]]>
                  </if>
              </when>

          </choose>
      </where>
  </sql> 
  
  <!-- doRetrieve: 조회+검색,페이징 -->
  <select id="doRetrieve" parameterType="SearchVO" resultType="MealVO">
		SELECT B.*, A.* 
		FROM (
		    SELECT COUNT(*) "totalNum" 
		    FROM meal_t
        <include refid="searchCondition"/>
		) A CROSS JOIN (
			SELECT mm.rnum "num", 
             mm.meal_sq "mealSq", 
             TO_CHAR(mm.meal_date, 'YYYY.MM.DD') "mealDate",
             mm.user_id "userId", 
             mm.meal_kcal "mealKcal", 
             mm.meal_divs "mealDivs" 
			FROM (
			    SELECT ROWNUM rnum,
			           m.* 
			    FROM (
					    SELECT meal_sq, 
					           meal_date, 
					           user_id, 
					           meal_kcal, 
					           meal_divs 
					    FROM meal_t
			        <include refid="searchCondition"/>
			        <include refid="orderCondition"/>
			    ) m
			) mm
			WHERE rnum BETWEEN (#{pageSize}*(#{pageNum}-1))+1 AND (#{pageSize}*(#{pageNum}-1))+#{pageSize}
		) B  
  </select>

  <!-- doSelectOne: 단건 조회 -->
  <select id="doSelectOne" parameterType="MealVO" resultType="MealVO">
    SELECT meal_sq "mealSq", 
           TO_CHAR(meal_date, 'YYYY.MM.DD') "mealDate",
           user_id "userId", 
           meal_kcal "mealKcal", 
           meal_divs "mealDivs" 
    FROM meal_t
    WHERE meal_sq = #{mealSq}
  </select>

  <!-- doUpdate: 수정 -->
  <update id="doUpdate" parameterType="MealVO">
		UPDATE meal_t
		SET meal_kcal = #{mealKcal},  
        meal_divs = #{mealDivs}
		WHERE meal_sq = #{mealSq}
  </update>

  <!-- doDelete: 삭제 -->
  <delete id="doDelete" parameterType="MealVO">
		DELETE FROM meal_t
		WHERE meal_sq = #{mealSq}
  </delete>

  <!-- doInsert: 삽입 -->
  <insert id="doInsert" parameterType="MealVO">
		INSERT INTO meal_t (
		    meal_sq,
		    meal_date, 
		    user_id, 
		    meal_kcal,  
		    meal_divs 
		) VALUES (
		    meal_seq.nextval,
		    TO_DATE(#{mealDate}), 
		    #{userId}, 
		    #{mealKcal},  
		    #{mealDivs} 
		)
  </insert>


  <!--========= for JUnit Test =========-->
  <!-- getAll: 전체 조회 -->
  <select id="getAll" resultType="MealVO">
    SELECT *
    FROM meal_t
  </select>

  <!-- getAll: 전체 개수 -->
  <select id="getCount" resultType="int">
    SELECT count(*) "cnt"
    FROM meal_t
  </select>

  <!-- getAll: 전체 삭제 -->
  <delete id="deleteAll">
    DELETE FROM meal_t
  </delete>

  <!-- getLastData: 마지막 입력된 값 가져오기 -->
  <select id="getLastData" resultType="MealVO">
	  SELECT meal_sq "mealSq", 
           TO_CHAR(meal_date, 'YYYY.MM.DD') "mealDate",
		       user_id "userId", 
		       meal_kcal "mealKcal", 
           meal_divs "mealDivs" 
		FROM meal_t
		WHERE meal_sq = (
		    SELECT MAX(meal_sq) FROM meal_t
		)
  </select>


</mapper>