<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.scott.ngg.FileMapper">
    
  <!-- doRetreive 검색조건 -->
  <sql id="searchCondition">
    <where>
      <if test="searchWord != ''">
         file_o_name LIKE '%' || #{searchWord} || '%'
      </if>
    </where>
  </sql>
  
  <!-- doRetrieve: 조회+검색,페이징 -->
  <select id="doRetrieve" parameterType="SearchVO" resultType="FileVO">
    SELECT B.*, A.* 
    FROM (
        SELECT COUNT(*) "totalNum"
        FROM file_t
        <include refid="searchCondition"/>
    ) A CROSS JOIN (
        SELECT ff.file_sq "fileSq", 
               ff.file_o_name "fileOName", 
               ff.file_s_name "fileSName", 
               ff.file_path "filePath" 
        FROM (
            SELECT ROWNUM rnum, 
                   f.*
            FROM (
                SELECT file_sq, 
                       file_o_name, 
                       file_s_name, 
                       file_path 
                FROM file_t 
                <include refid="searchCondition"/>
                ORDER BY file_sq ASC
            ) f
        ) ff
        WHERE rnum BETWEEN (#{pageSize}*(#{pageNum}-1))+1 AND (#{pageSize}*(#{pageNum}-1))+#{pageSize}
    ) B
  </select>

  <!-- doSelectOne: 단건 조회 -->
  <select id="doSelectOne" parameterType="FileVO" resultType="FileVO">
    SELECT file_sq "fileSq", 
           file_o_name "fileOName", 
           file_s_name "fileSName", 
           file_path "filePath" 
    FROM file_t
    WHERE file_sq = #{fileSq}
  </select>

  <!-- doUpdate: 수정 -->
  <update id="doUpdate"  parameterType="FileVO">
    UPDATE file_t
    SET file_o_name = #{fileOName}, 
        file_s_name = #{fileSName}, 
        file_path = #{filePath} 
    WHERE file_sq = #{fileSq}
  </update>  
  
  <!-- doDelete: 삭제 -->
  <delete id="doDelete"  parameterType="FileVO">
    DELETE FROM file_t 
    WHERE file_sq = #{fileSq}
  </delete>
  
  <!-- doInsert: 삽입 -->
  <insert id="doInsert" parameterType="FileVO">
    INSERT INTO file_t (
        file_sq,
        file_o_name,
        file_s_name,
        file_path
    ) VALUES (
        FILE_SEQ.NEXTVAL,
        #{fileOName}, 
        #{fileSName}, 
        #{filePath}
    )
  </insert>


  <!--========= for JUnit Test =========-->
  <!-- getAll: 전체 조회 -->
  <select id="getAll" resultType="FileVO">
    SELECT *
    FROM file_t
  </select>

  <!-- getAll: 전체 개수 -->
  <select id="getCount" resultType="int">
    SELECT count(*) "cnt"
    FROM file_t
  </select>

  <!-- getAll: 전체 삭제 -->
  <delete id="deleteAll">
    DELETE FROM file_t
  </delete>
  
  <!-- getLastData: 마지막 입력된 값 가져오기 -->
  <select id="getLastData" resultType="FileVO">
    SELECT file_sq "fileSq", 
           file_o_name "fileOName", 
           file_s_name "fileSName", 
           file_path "filePath" 
    FROM file_t
    WHERE file_s_name = (
        SELECT LAST_VALUE(file_s_name) OVER()
        FROM file_t
    )
  </select>
  
</mapper>